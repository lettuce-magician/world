mouse={m=mouse,x=0,y=0,px=0,py=0,lb=false,plb=false,mb=false,pmb=false,rb=false,prb=false,LEFT=1,MIDDLE=2,RIGHT=3}function mouse:__call()x,y,lb,mb,rb,sx,sy=self.m()self.px=self.x;self.py=self.y;self.x=x;self.y=y;self.plb=self.lb;self.lb=lb;self.pmb=self.mb;self.mb=mb;self.prb=self.rb;self.rb=rb;self.scroll=sy;return x,y,lb,mb,rb,sx,sy end;function mouse.is_locked()return peek(0x7FC3F,1)>0 and true or false end;function mouse.toggle_lock()poke(0x7FC3F,peek(0x7FC3F,1)>0 and 0 or 1,1)end;function mouse.in_bound(x,y,a,b)return mouse.x>=x and mouse.x<x+a and mouse.y>=y and mouse.y<y+b end;function mouse.clicked(c)c=c or 1;if c==1 then return mouse.lb and not mouse.plb elseif c==2 then return mouse.mb and not mouse.pmb elseif c==3 then return mouse.rb and not mouse.prb end end;function mouse.pressed(c)c=c or 1;if c==1 then return mouse.lb elseif c==2 then return mouse.mb elseif c==3 then return mouse.rb end end;function mouse.released(c)c=c or 1;if c==1 then return not mouse.lb and mouse.plb elseif c==2 then return not mouse.mb and mouse.pmb elseif c==3 then return not mouse.rb and mouse.prb end end;function mouse:__tostring()return string.format('(%s, %s)',self.x,self.y)end;setmetatable(mouse,mouse)local function WORLD(e)assert(_G.TIC==nil,"a world is arleady running")local f={settings=e or{}}local g={}local h={}local i={}local j=0;local function k(l,...)if h[l]then for m,n in pairs(h[l])do n(...)end end end;local function o()for m=0,7 do if btn(m)then return m end end;return-1 end;local function p()for m=1,65 do if key(m)then return m end end;return 0 end;function f.on(q,r)if not h[q]then h[q]={}end;table.insert(h[q],r)end;function f.run()k("INIT")_G.TIC=function()cls()mouse()j=j+1;k("UPDATE",j)if btn()~=0 then k("BUTTON",o())end;if btnp()~=0 then k("BUTTON_PRESSED",o())end;if mouse.clicked(1)==true then k("MOUSE_LEFT_CLICK")end;if mouse.clicked(2)==true then k("MOUSE_RIGHT_CLICK")end;if mouse.clicked(3)==true then k("MOUSE_MIDDLE_CLICK")end;if key()~=0 then k("KEY",p())end end end;function f.quit()k("QUIT")exit()end;function f.player(s)assert(#i<=4,"max player cap has reached.")i["PLAYER"..#i+1]=s or{}return i["PLAYER"..#i+1]end;function f.instance(q,t)assert(g[q]==nil,"Instance "..q.."exists")g[q]=t or{}return g[q]end;function f.find(q)return g[q]end;return f end